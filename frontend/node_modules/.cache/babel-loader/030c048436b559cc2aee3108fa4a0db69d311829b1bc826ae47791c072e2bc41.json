{"ast":null,"code":"var _jsxFileName = \"/Users/joescibilia/Desktop/poke-attempts/best-poke/poket2/simple-poke copy/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport PokeApi from \"./api/api\";\nimport RouteList from \"./Routes/RouteList\";\nimport jwt from \"jsonwebtoken\";\nimport useLocalStorage from \"./Hooks/useLocalStorage\";\nimport UserContext from \"./auth/UserContext\";\nimport Nav from \"./Components/Nav\";\n\n// Key name for storing token in localStorage for \"remember me\" re-login\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TOKEN_STORAGE_ID = \"poke-token\";\nfunction App() {\n  _s();\n  const [currentUser, setCurrentUser] = useState([]);\n  const [token, setToken] = useLocalStorage(TOKEN_STORAGE_ID);\n  const [isLoading, setIsLoading] = useState(false);\n  console.debug(\"App\", \"currentUser=\", currentUser, \"token=\", token);\n\n  // Load user info from API. Until user is logged in with token,\n  // this should not run\n\n  useEffect(function loadUserInfo() {\n    console.debug(\"App useEffect loadUserInfo\", \"token=\", token);\n    async function getCurrentUser() {\n      if (token) {\n        try {\n          let {\n            username\n          } = jwt.decode(token);\n          PokeApi.token = token;\n          let currentUser = await PokeApi.getCurrentUser(username);\n          setCurrentUser(currentUser);\n        } catch (err) {\n          console.error(\"App loadUserInfo: problem loading\", err);\n          setCurrentUser(null);\n        }\n      }\n      setIsLoading(true);\n    }\n    setIsLoading(false);\n    getCurrentUser();\n  }, [token]);\n\n  /* User Auth */\n  /* handles signup */\n\n  async function signup(signupData) {\n    try {\n      let token = await PokeApi.signup(signupData);\n      setToken(token);\n      return {\n        success: true\n      };\n    } catch (err) {\n      console.error(\"signup failed\", err);\n      return {\n        sucess: false,\n        err\n      };\n    }\n  }\n\n  /* handles login */\n  async function login(loginData) {\n    try {\n      let token = await PokeApi.login(loginData);\n      setToken(token);\n      return {\n        sucess: true\n      };\n    } catch (err) {\n      console.error(\"login failed\", err);\n      return {\n        success: false,\n        err\n      };\n    }\n  }\n\n  /* handles logout */\n\n  async function logout() {\n    setCurrentUser(null);\n    setToken(null);\n  }\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      currentUser,\n      setCurrentUser\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        logout: logout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RouteList, {\n        login: login,\n        signup: signup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fE+MgQzyjaubmsM9P51Ls51OH7w=\", false, function () {\n  return [useLocalStorage];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PokeApi","RouteList","jwt","useLocalStorage","UserContext","Nav","jsxDEV","_jsxDEV","TOKEN_STORAGE_ID","App","_s","currentUser","setCurrentUser","token","setToken","isLoading","setIsLoading","console","debug","loadUserInfo","getCurrentUser","username","decode","err","error","signup","signupData","success","sucess","login","loginData","logout","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/joescibilia/Desktop/poke-attempts/best-poke/poket2/simple-poke copy/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PokeApi from \"./api/api\";\nimport RouteList from \"./Routes/RouteList\";\nimport jwt from \"jsonwebtoken\";\nimport useLocalStorage from \"./Hooks/useLocalStorage\";\nimport UserContext from \"./auth/UserContext\";\nimport Nav from \"./Components/Nav\";\n\n// Key name for storing token in localStorage for \"remember me\" re-login\nexport const TOKEN_STORAGE_ID = \"poke-token\";\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState([]);\n  const [token, setToken] = useLocalStorage(TOKEN_STORAGE_ID);\n  const [isLoading, setIsLoading] = useState(false);\n  console.debug(\n    \"App\",\n    \"currentUser=\", currentUser,\n    \"token=\", token,\n  );\n\n  // Load user info from API. Until user is logged in with token,\n  // this should not run\n\n  useEffect(function loadUserInfo() {\n    console.debug(\"App useEffect loadUserInfo\", \"token=\", token);\n\n    async function getCurrentUser() {\n      if (token) {\n        try {\n          let { username } = jwt.decode(token);\n          PokeApi.token = token;\n          let currentUser = await PokeApi.getCurrentUser(username);\n          setCurrentUser(currentUser);\n        } catch (err) {\n          console.error(\"App loadUserInfo: problem loading\", err);\n          setCurrentUser(null);\n        }\n      }\n      setIsLoading(true);\n    }\n    setIsLoading(false);\n    getCurrentUser();\n  }, [token]);\n\n  /* User Auth */\n  /* handles signup */\n\n  async function signup(signupData) {\n    try {\n      let token = await PokeApi.signup(signupData);\n      setToken(token);\n      return { success: true };\n    } catch (err) {\n      console.error(\"signup failed\", err);\n      return { sucess: false, err };\n    }\n  }\n\n  /* handles login */\n  async function login(loginData) {\n    try {\n      let token = await PokeApi.login(loginData);\n      setToken(token);\n      return { sucess: true };\n    } catch (err) {\n      console.error(\"login failed\", err);\n      return { success: false, err };\n    }\n  }\n\n  /* handles logout */\n\n  async function logout() {\n    setCurrentUser(null);\n    setToken(null);\n  }\n\n  return (\n    <UserContext.Provider\n      value={{ currentUser, setCurrentUser }}>\n      <div>\n        <Nav logout={logout}/>\n        <RouteList login={login} signup={signup} />\n      </div>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}